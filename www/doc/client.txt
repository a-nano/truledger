The sample truledger client handles multiple users of multiple servers.
More details in db.txt, the description of the server database and protocol.

Items in angle brackets are variables
Items not in angle brackets are literals
"--" comment to the end of the line
<dir>/ is a directory
<key>=<value> is a file named <key> with contents <value>
Items whose names end with "#" are sequence numbers.
name:<item> denotes an optional item, passed by position or name
Items in parens  are signed. Signature omitted here.

truledger-dbs/clientdb/
  privkey/            -- private keys indexed by the hash of their passphrases
    <hash>=<privkey>
  pubkey/  -- for fast lookup. Must verify that <id> = hash(<pubkey>)
    <id>=<pubkey>
  server/               -- servers
    serverid/
      sha1(<url>)=<serverid>
    <serverid>/
      url=<url>       -- web address of the server
      name=<name>     -- Server's name
      tokenid=(<serverid>,tokenid,<tokenid>)
      regfee=(<serverid>,regfee,<time#>,<tokenid>,<amount>)
      tranfee=(<serverid>,tranfee,<serverid>,<time#>,<tokenid>,<amount>)
      features=(<serverid>,features,<serverid>,<time#>,<f1>|<f2>|...|<fn>)
      fee/
        spend=(<serverid>,fee,<time#>,spend,<assetid>,<amount>)[...]
        transfer=(<serverid>,fee,<time#>,transfer,<assetid>,<amount>)[...]
        createasset=(<serverid>,fee,<time#>,createasset,<assetid>,<amount>)[...]
      asset/
        <assetid>=(<serverid>,@asset,(<id>,asset,<serverid>,<assetid>,<scale>,<precision>,<assetname>))
      permission/
        <permission>=(<serverid>,@grant,(<serverid>,grant,<serverid>,<time#>,<serverid>,<permission>,grant))
  session/
    <sessionhash>=<encrypted_passphrase>
  account/
    <id>/
      session=<sessionhash>
      preference
        <pref>=<value>
      contact/
        <otherid>/
          nickname=<nickname>
          note=<note>
          name=<name>
          pubkeysig=<pubkeysig>
          servers=<serverid-list>
      server
        <serverid>/
          time=<time#>[,<time#>]
          req=<req#>
          pubkeysig/
            <id>=(<serverid>,@register,(<id>,register,<serverid>,<pubkey>,name=<name>))
          fraction/     -- fractional amounts due to storage fees
            <assetid>=(<serverid>,@fraction,(<id>,fraction,<serverid>,<time#>,<assetid>,<amount>))
          lasttransaction=(<serverid>,@commit,(<id>,commit,<serverid>,<time#>))
          balancehash=(<serverid>,@balancehash,(<id>,balancehash,<serverid>,<time#>,<count>,<hash>))
          balance/
            <acct>/  -- "main" is the default acct name
              <assetid>=(<serverid>,@balance,(<id>,balance,<serverid>,<time#>,<assetid>,<amount>,acct:<acct>))
          outboxhash=(<serverid>,@outboxhash,(<id>,outboxhash,<serverid>,<time#>,<count>,<hash>))
          outbox/
            <time2#>=(<serverid>,@spend,(<id>,spend,<serverid>,<time2#>,<id2>,<assetid2>,<amount2>,note:<note2>,acct:<acct2>)).
                     (<serverid>,@tranfee,(<id>,tranfee,<serverid>,<time2#>,<tokenid>,<amount2fee>))
            <time3#>=(<serverid>,@spend,(<id>,spend,<serverid>,<time3#>,<id3>,<assetid3>,<amount3>,note:<note3>,acct:<acct3>)).
                     (<serverid>,@tranfee,(<id>,tranfee,<serverid>,<time3#>,<tokenid>,<amount3fee>))
          inbox/
            <time5#>=(<serverid>,inbox,<time5#>,(<id2>,spend|accept,<serverid>,<time2#>,<id>,note:<note22>))
            <time6#>=(<serverid>,inbox,<time6#>,(<id3>,spend|reject,<serverid>,<time3#>,<id>,note:<note32>))
            <time7#>=(<serverid>,inbox,<time7#>,(<id4>,spend,<serverid>,<time4#>,<id>,<assetid4>,<amount4>,note:<note4>)).
                     (<serverid>,@tranfee,(<id>,tranfee,<serverid>,<time4#>,<tokenid>,<amount4fee>))
          inboxignored=<time#1>,<time#2>,...,<time#N>
          permission/
            <permission>=(<serverid>,@grant,(<id>,grant,<serverid>,<time#>,<toid>,<permission>,grant=grant))...
          history/
            -- Needs more work. Likely wants to be indexed multiple ways
            -- and probably organized in directories to keep any one listing
            -- from getting too long to handle
            <time>=<message>...

  loom/     -- Loom client data
    salt=<salt>    -- random loom loc to xor with before hashing
    server/
      <urlhash>=<url>
    account/
      <account-hash>/
        session=<sessionhash>
        preference
          <pref>=<value>
        server/
          <urlhash>/
            walletname/
              <namehash>=<name>
            wallet/
              <namehash>/
                passphrase=<encrypted-passphrase>
                private=<true-or-false>

The client API encrypts the note field of a "spend" message, so that
it is readable only by the two parties to the spend. The format of the
encrypted messages is:

  [<id1>:<key1>|<id2>:<key2>,<iv>,<ciphertext>]

Where the IDs are the sender and recipient account IDs, the KEYs are
private-key encrypted password, <iv> is an initialization vector, and
<ciphertext> is the mesage, encrypted with the passphrase and <iv>.


// Copyright 2008-2011 Bill St. Clair
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions
// and limitations under the License.
